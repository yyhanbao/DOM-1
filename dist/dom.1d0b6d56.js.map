{"version":3,"sources":["dom.js"],"names":["window","dom","find","selector","scope","document","querySelectorAll","style","node","name","value","arguments","length","Object","object","key","each","nodeList","fn","i","call","div","console","log","divList","n"],"mappings":"AAAAA,MAAM,CAACC,GAAP,GAAa;AACXC,EAAAA,IADW,gBACNC,QADM,EACIC,KADJ,EACW;AACpB;AACA,WAAO,CAACA,KAAK,IAAIC,QAAV,EAAoBC,gBAApB,CAAqCH,QAArC,CAAP;AACD,GAJU;AAKXI,EAAAA,KALW,iBAKLC,IALK,EAKCC,IALD,EAKOC,KALP,EAKc;AACvB;AACA,QAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC1B;AACAJ,MAAAA,IAAI,CAACD,KAAL,CAAWE,IAAX,IAAmBC,KAAnB;AACD,KAHD,MAGO,IAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AACjC,UAAI,OAAOH,IAAP,KAAgB,QAApB,EAA8B;AAC5B;AACA,eAAOD,IAAI,CAACD,KAAL,CAAWE,IAAX,CAAP;AACD,OAHD,MAGO,IAAIA,IAAI,YAAYI,MAApB,EAA4B;AACjC;AACA,YAAMC,MAAM,GAAGL,IAAf;;AACA,aAAK,IAAIM,GAAT,IAAgBD,MAAhB,EAAwB;AACtBN,UAAAA,IAAI,CAACD,KAAL,CAAWQ,GAAX,IAAkBD,MAAM,CAACC,GAAD,CAAxB;AACD;AACF;AACF;AACF,GAtBU;AAuBXC,EAAAA,IAvBW,gBAuBNC,QAvBM,EAuBIC,EAvBJ,EAuBQ;AACjB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACL,MAA7B,EAAqCO,CAAC,EAAtC,EAA0C;AACxCD,MAAAA,EAAE,CAACE,IAAH,CAAQ,IAAR,EAAcH,QAAQ,CAACE,CAAD,CAAtB;AACD;AACF;AA3BU,CAAb;AA8BA,IAAME,GAAG,GAAGpB,GAAG,CAACC,IAAJ,CAAS,aAAT,EAAwB,CAAxB,CAAZ;AACAoB,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,GAAnB;AACApB,GAAG,CAACM,KAAJ,CAAUc,GAAV,EAAe,OAAf,EAAwB,KAAxB;AAEA,IAAMG,OAAO,GAAGvB,GAAG,CAACC,IAAJ,CAAS,MAAT,CAAhB;AACAD,GAAG,CAACe,IAAJ,CAASQ,OAAT,EAAkB,UAACC,CAAD;AAAA,SAAOH,OAAO,CAACC,GAAR,CAAYE,CAAZ,CAAP;AAAA,CAAlB","file":"dom.1d0b6d56.js","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n  find(selector, scope) {\r\n    // 用于获取标签或标签们\r\n    return (scope || document).querySelectorAll(selector);\r\n  },\r\n  style(node, name, value) {\r\n    // 用于修改 style\r\n    if (arguments.length === 3) {\r\n      // dom.style(div,'color','red')\r\n      node.style[name] = value;\r\n    } else if (arguments.length === 2) {\r\n      if (typeof name === \"string\") {\r\n        // dom.style(div,'color')\r\n        return node.style[name];\r\n      } else if (name instanceof Object) {\r\n        // dom.style(div,{color:'red'})\r\n        const object = name;\r\n        for (let key in object) {\r\n          node.style[key] = object[key];\r\n        }\r\n      }\r\n    }\r\n  },\r\n  each(nodeList, fn) {\r\n    for (let i = 0; i < nodeList.length; i++) {\r\n      fn.call(null, nodeList[i]);\r\n    }\r\n  },\r\n};\r\n\r\nconst div = dom.find(\"#test >.red\")[0];\r\nconsole.log(\"div\", div);\r\ndom.style(div, \"color\", \"red\");\r\n\r\nconst divList = dom.find(\".red\");\r\ndom.each(divList, (n) => console.log(n));\r\n"]}